#############################################################################
# Makefile for building: GuidoQtAll
# Generated by qmake (3.1) (Qt 5.11.2)
# Project:  GuidoQtAll.pro
# Template: subdirs
# Command: C:\Qt\5.11.2\msvc2015_64\bin\qmake.exe -o Makefile GuidoQtAll.pro
#############################################################################

MAKEFILE      = Makefile

first: make_first
QMAKE         = C:\Qt\5.11.2\msvc2015_64\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = copy /y
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = copy /y
INSTALL_PROGRAM = copy /y
INSTALL_DIR   = xcopy /s /q /y /i
QINSTALL      = C:\Qt\5.11.2\msvc2015_64\bin\qmake.exe -install qinstall
QINSTALL_PROGRAM = C:\Qt\5.11.2\msvc2015_64\bin\qmake.exe -install qinstall -exe
DEL_FILE      = del
SYMLINK       = $(QMAKE) -install ln -f -s
DEL_DIR       = rmdir
MOVE          = move
SUBTARGETS    =  \
		sub-libs-GuidoQt \
		sub-libs-GraphicsSceneMainWindow \
		sub-apps-guido2image \
		sub-apps-GuidoEditor \
		sub-apps-GuidoSceneComposer \
		sub-tools-GuidoQtFontViewer


sub-libs-GuidoQt-qmake_all:  FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	cd libs\GuidoQt\ && $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && $(MAKE) -f Makefile qmake_all
sub-libs-GuidoQt: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile
sub-libs-GuidoQt-make_first-ordered: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile 
sub-libs-GuidoQt-make_first: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile 
sub-libs-GuidoQt-all-ordered: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile all
sub-libs-GuidoQt-all: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile all
sub-libs-GuidoQt-clean-ordered: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile clean
sub-libs-GuidoQt-clean: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile clean
sub-libs-GuidoQt-distclean-ordered: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile distclean
sub-libs-GuidoQt-distclean: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile distclean
sub-libs-GuidoQt-install_subtargets-ordered: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile install
sub-libs-GuidoQt-install_subtargets: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile install
sub-libs-GuidoQt-uninstall_subtargets-ordered: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile uninstall
sub-libs-GuidoQt-uninstall_subtargets: FORCE
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile uninstall
sub-libs-GraphicsSceneMainWindow-qmake_all: sub-libs-GuidoQt-qmake_all FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	cd libs\GraphicsSceneMainWindow\ && $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && $(MAKE) -f Makefile qmake_all
sub-libs-GraphicsSceneMainWindow: FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile
sub-libs-GraphicsSceneMainWindow-make_first-ordered: sub-libs-GuidoQt-make_first-ordered  FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile 
sub-libs-GraphicsSceneMainWindow-make_first: FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile 
sub-libs-GraphicsSceneMainWindow-all-ordered: sub-libs-GuidoQt-all-ordered  FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile all
sub-libs-GraphicsSceneMainWindow-all: FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile all
sub-libs-GraphicsSceneMainWindow-clean-ordered: sub-libs-GuidoQt-clean-ordered  FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile clean
sub-libs-GraphicsSceneMainWindow-clean: FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile clean
sub-libs-GraphicsSceneMainWindow-distclean-ordered: sub-libs-GuidoQt-distclean-ordered  FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile distclean
sub-libs-GraphicsSceneMainWindow-distclean: FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile distclean
sub-libs-GraphicsSceneMainWindow-install_subtargets-ordered: sub-libs-GuidoQt-install_subtargets-ordered  FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile install
sub-libs-GraphicsSceneMainWindow-install_subtargets: FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile install
sub-libs-GraphicsSceneMainWindow-uninstall_subtargets-ordered: sub-libs-GuidoQt-uninstall_subtargets-ordered  FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile uninstall
sub-libs-GraphicsSceneMainWindow-uninstall_subtargets: FORCE
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile uninstall
sub-apps-guido2image-qmake_all: sub-libs-GraphicsSceneMainWindow-qmake_all FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	cd apps\guido2image\ && $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && $(MAKE) -f Makefile qmake_all
sub-apps-guido2image: FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile
sub-apps-guido2image-make_first-ordered: sub-libs-GraphicsSceneMainWindow-make_first-ordered  FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile 
sub-apps-guido2image-make_first: FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile 
sub-apps-guido2image-all-ordered: sub-libs-GraphicsSceneMainWindow-all-ordered  FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile all
sub-apps-guido2image-all: FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile all
sub-apps-guido2image-clean-ordered: sub-libs-GraphicsSceneMainWindow-clean-ordered  FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile clean
sub-apps-guido2image-clean: FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile clean
sub-apps-guido2image-distclean-ordered: sub-libs-GraphicsSceneMainWindow-distclean-ordered  FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile distclean
sub-apps-guido2image-distclean: FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile distclean
sub-apps-guido2image-install_subtargets-ordered: sub-libs-GraphicsSceneMainWindow-install_subtargets-ordered  FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile install
sub-apps-guido2image-install_subtargets: FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile install
sub-apps-guido2image-uninstall_subtargets-ordered: sub-libs-GraphicsSceneMainWindow-uninstall_subtargets-ordered  FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile uninstall
sub-apps-guido2image-uninstall_subtargets: FORCE
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile uninstall
sub-apps-GuidoEditor-qmake_all: sub-apps-guido2image-qmake_all FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	cd apps\GuidoEditor\ && $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && $(MAKE) -f Makefile qmake_all
sub-apps-GuidoEditor: FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile
sub-apps-GuidoEditor-make_first-ordered: sub-apps-guido2image-make_first-ordered  FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile 
sub-apps-GuidoEditor-make_first: FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile 
sub-apps-GuidoEditor-all-ordered: sub-apps-guido2image-all-ordered  FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile all
sub-apps-GuidoEditor-all: FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile all
sub-apps-GuidoEditor-clean-ordered: sub-apps-guido2image-clean-ordered  FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile clean
sub-apps-GuidoEditor-clean: FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile clean
sub-apps-GuidoEditor-distclean-ordered: sub-apps-guido2image-distclean-ordered  FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile distclean
sub-apps-GuidoEditor-distclean: FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile distclean
sub-apps-GuidoEditor-install_subtargets-ordered: sub-apps-guido2image-install_subtargets-ordered  FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile install
sub-apps-GuidoEditor-install_subtargets: FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile install
sub-apps-GuidoEditor-uninstall_subtargets-ordered: sub-apps-guido2image-uninstall_subtargets-ordered  FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile uninstall
sub-apps-GuidoEditor-uninstall_subtargets: FORCE
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile uninstall
sub-apps-GuidoSceneComposer-qmake_all: sub-apps-GuidoEditor-qmake_all FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	cd apps\GuidoSceneComposer\ && $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && $(MAKE) -f Makefile qmake_all
sub-apps-GuidoSceneComposer: FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile
sub-apps-GuidoSceneComposer-make_first-ordered: sub-apps-GuidoEditor-make_first-ordered  FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile 
sub-apps-GuidoSceneComposer-make_first: FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile 
sub-apps-GuidoSceneComposer-all-ordered: sub-apps-GuidoEditor-all-ordered  FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile all
sub-apps-GuidoSceneComposer-all: FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile all
sub-apps-GuidoSceneComposer-clean-ordered: sub-apps-GuidoEditor-clean-ordered  FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile clean
sub-apps-GuidoSceneComposer-clean: FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile clean
sub-apps-GuidoSceneComposer-distclean-ordered: sub-apps-GuidoEditor-distclean-ordered  FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile distclean
sub-apps-GuidoSceneComposer-distclean: FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile distclean
sub-apps-GuidoSceneComposer-install_subtargets-ordered: sub-apps-GuidoEditor-install_subtargets-ordered  FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile install
sub-apps-GuidoSceneComposer-install_subtargets: FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile install
sub-apps-GuidoSceneComposer-uninstall_subtargets-ordered: sub-apps-GuidoEditor-uninstall_subtargets-ordered  FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile uninstall
sub-apps-GuidoSceneComposer-uninstall_subtargets: FORCE
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile uninstall
sub-tools-GuidoQtFontViewer-qmake_all: sub-apps-GuidoSceneComposer-qmake_all FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	cd tools\GuidoQtFontViewer\ && $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && $(MAKE) -f Makefile qmake_all
sub-tools-GuidoQtFontViewer: FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile
sub-tools-GuidoQtFontViewer-make_first-ordered: sub-apps-GuidoSceneComposer-make_first-ordered  FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile 
sub-tools-GuidoQtFontViewer-make_first: FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile 
sub-tools-GuidoQtFontViewer-all-ordered: sub-apps-GuidoSceneComposer-all-ordered  FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile all
sub-tools-GuidoQtFontViewer-all: FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile all
sub-tools-GuidoQtFontViewer-clean-ordered: sub-apps-GuidoSceneComposer-clean-ordered  FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile clean
sub-tools-GuidoQtFontViewer-clean: FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile clean
sub-tools-GuidoQtFontViewer-distclean-ordered: sub-apps-GuidoSceneComposer-distclean-ordered  FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile distclean
sub-tools-GuidoQtFontViewer-distclean: FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile distclean
sub-tools-GuidoQtFontViewer-install_subtargets-ordered: sub-apps-GuidoSceneComposer-install_subtargets-ordered  FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile install
sub-tools-GuidoQtFontViewer-install_subtargets: FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile install
sub-tools-GuidoQtFontViewer-uninstall_subtargets-ordered: sub-apps-GuidoSceneComposer-uninstall_subtargets-ordered  FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile uninstall
sub-tools-GuidoQtFontViewer-uninstall_subtargets: FORCE
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile uninstall

Makefile: GuidoQtAll.pro C:\Qt\5.11.2\msvc2015_64\mkspecs\win32-msvc\qmake.conf C:\Qt\5.11.2\msvc2015_64\mkspecs\features\spec_pre.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\common\angle.conf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\common\windows-vulkan.conf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\common\msvc-desktop.conf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\qconfig.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3danimation.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3danimation_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dcore.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dcore_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dextras.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dextras_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dinput.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dinput_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dlogic.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dlogic_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquick.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquick_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickanimation.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickanimation_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickextras.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickextras_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickinput.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickinput_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickrender.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickrender_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickscene2d.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickscene2d_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3drender.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3drender_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_accessibility_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axbase.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axbase_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axcontainer.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axcontainer_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axserver.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axserver_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_bluetooth.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_bluetooth_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_bootstrap_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_charts.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_charts_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_concurrent.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_concurrent_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_core.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_core_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_datavisualization.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_datavisualization_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_dbus.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_dbus_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_designer.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_designer_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_designercomponents_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_devicediscovery_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_edid_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_egl_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_eventdispatcher_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_fb_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_fontdatabase_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gamepad.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gamepad_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gui.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gui_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_help.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_help_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_location.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_location_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimedia.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimedia_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimediawidgets.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimediawidgets_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_network.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_network_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_networkauth.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_networkauth_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_nfc.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_nfc_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_opengl.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_opengl_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_openglextensions.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_openglextensions_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_packetprotocol_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_platformcompositor_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioning.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioning_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioningquick.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioningquick_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_printsupport.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_printsupport_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_purchasing.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_purchasing_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qml.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qml_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmldebug_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmldevtools_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmltest.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmltest_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qtmultimediaquicktools_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quick.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quick_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickcontrols2.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickcontrols2_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickparticles_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quicktemplates2_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickwidgets.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickwidgets_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_remoteobjects.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_remoteobjects_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_repparser.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_repparser_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_script.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_script_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scripttools.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scripttools_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scxml.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scxml_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sensors.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sensors_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialbus.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialbus_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialport.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialport_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sql.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sql_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_svg.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_svg_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_testlib.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_testlib_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_texttospeech.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_texttospeech_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_theme_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_uiplugin.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_uitools.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_uitools_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_vulkan_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webchannel.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webchannel_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_websockets.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_websockets_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webview.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webview_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_widgets.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_widgets_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_windowsuiautomation_support_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_winextras.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_winextras_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xml.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xml_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xmlpatterns.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xmlpatterns_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_zlib_private.pri \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\qt_functions.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\qt_config.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\win32-msvc\qmake.conf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\spec_post.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\exclusive_builds.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\common\msvc-version.conf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\toolchain.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\default_pre.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\win32\default_pre.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\resolve_config.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\exclusive_builds_post.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\default_post.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\precompile_header.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\warn_on.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\qmake_use.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\file_copies.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\win32\windows.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\testcase_targets.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\exceptions.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\yacc.prf \
		C:\Qt\5.11.2\msvc2015_64\mkspecs\features\lex.prf \
		GuidoQtAll.pro
	$(QMAKE) -o Makefile GuidoQtAll.pro
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\spec_pre.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\common\angle.conf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\common\windows-vulkan.conf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\common\msvc-desktop.conf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\qconfig.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3danimation.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3danimation_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dcore.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dcore_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dextras.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dextras_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dinput.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dinput_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dlogic.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dlogic_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquick.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquick_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickanimation.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickanimation_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickextras.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickextras_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickinput.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickinput_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickrender.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickrender_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickscene2d.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3dquickscene2d_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3drender.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_3drender_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_accessibility_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axbase.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axbase_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axcontainer.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axcontainer_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axserver.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_axserver_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_bluetooth.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_bluetooth_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_bootstrap_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_charts.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_charts_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_concurrent.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_concurrent_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_core.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_core_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_datavisualization.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_datavisualization_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_dbus.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_dbus_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_designer.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_designer_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_designercomponents_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_devicediscovery_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_edid_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_egl_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_eventdispatcher_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_fb_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_fontdatabase_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gamepad.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gamepad_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gui.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_gui_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_help.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_help_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_location.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_location_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimedia.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimedia_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimediawidgets.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_multimediawidgets_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_network.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_network_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_networkauth.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_networkauth_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_nfc.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_nfc_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_opengl.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_opengl_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_openglextensions.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_openglextensions_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_packetprotocol_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_platformcompositor_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioning.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioning_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioningquick.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_positioningquick_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_printsupport.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_printsupport_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_purchasing.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_purchasing_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qml.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qml_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmldebug_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmldevtools_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmltest.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qmltest_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_qtmultimediaquicktools_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quick.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quick_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickcontrols2.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickcontrols2_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickparticles_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quicktemplates2_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickwidgets.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_quickwidgets_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_remoteobjects.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_remoteobjects_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_repparser.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_repparser_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_script.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_script_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scripttools.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scripttools_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scxml.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_scxml_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sensors.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sensors_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialbus.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialbus_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialport.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_serialport_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sql.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_sql_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_svg.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_svg_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_testlib.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_testlib_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_texttospeech.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_texttospeech_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_theme_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_uiplugin.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_uitools.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_uitools_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_vulkan_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webchannel.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webchannel_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_websockets.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_websockets_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webview.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_webview_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_widgets.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_widgets_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_windowsuiautomation_support_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_winextras.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_winextras_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xml.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xml_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xmlpatterns.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_xmlpatterns_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\modules\qt_lib_zlib_private.pri:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\qt_functions.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\qt_config.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\win32-msvc\qmake.conf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\spec_post.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\exclusive_builds.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\common\msvc-version.conf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\toolchain.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\default_pre.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\win32\default_pre.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\resolve_config.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\exclusive_builds_post.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\default_post.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\precompile_header.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\warn_on.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\qmake_use.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\file_copies.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\win32\windows.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\testcase_targets.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\exceptions.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\yacc.prf:
C:\Qt\5.11.2\msvc2015_64\mkspecs\features\lex.prf:
GuidoQtAll.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile GuidoQtAll.pro

qmake_all: sub-libs-GuidoQt-qmake_all sub-libs-GraphicsSceneMainWindow-qmake_all sub-apps-guido2image-qmake_all sub-apps-GuidoEditor-qmake_all sub-apps-GuidoSceneComposer-qmake_all sub-tools-GuidoQtFontViewer-qmake_all FORCE

make_first: sub-libs-GuidoQt-make_first-ordered sub-libs-GraphicsSceneMainWindow-make_first-ordered sub-apps-guido2image-make_first-ordered sub-apps-GuidoEditor-make_first-ordered sub-apps-GuidoSceneComposer-make_first-ordered sub-tools-GuidoQtFontViewer-make_first-ordered  FORCE
all: sub-libs-GuidoQt-all-ordered sub-libs-GraphicsSceneMainWindow-all-ordered sub-apps-guido2image-all-ordered sub-apps-GuidoEditor-all-ordered sub-apps-GuidoSceneComposer-all-ordered sub-tools-GuidoQtFontViewer-all-ordered  FORCE
clean: sub-libs-GuidoQt-clean-ordered sub-libs-GraphicsSceneMainWindow-clean-ordered sub-apps-guido2image-clean-ordered sub-apps-GuidoEditor-clean-ordered sub-apps-GuidoSceneComposer-clean-ordered sub-tools-GuidoQtFontViewer-clean-ordered  FORCE
distclean: sub-libs-GuidoQt-distclean-ordered sub-libs-GraphicsSceneMainWindow-distclean-ordered sub-apps-guido2image-distclean-ordered sub-apps-GuidoEditor-distclean-ordered sub-apps-GuidoSceneComposer-distclean-ordered sub-tools-GuidoQtFontViewer-distclean-ordered  FORCE
	-$(DEL_FILE) Makefile
	-$(DEL_FILE) .qmake.stash
install_subtargets: sub-libs-GuidoQt-install_subtargets-ordered sub-libs-GraphicsSceneMainWindow-install_subtargets-ordered sub-apps-guido2image-install_subtargets-ordered sub-apps-GuidoEditor-install_subtargets-ordered sub-apps-GuidoSceneComposer-install_subtargets-ordered sub-tools-GuidoQtFontViewer-install_subtargets-ordered FORCE
uninstall_subtargets: sub-libs-GuidoQt-uninstall_subtargets-ordered sub-libs-GraphicsSceneMainWindow-uninstall_subtargets-ordered sub-apps-guido2image-uninstall_subtargets-ordered sub-apps-GuidoEditor-uninstall_subtargets-ordered sub-apps-GuidoSceneComposer-uninstall_subtargets-ordered sub-tools-GuidoQtFontViewer-uninstall_subtargets-ordered FORCE

sub-libs-GuidoQt-debug_ordered:
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile debug
sub-libs-GraphicsSceneMainWindow-debug_ordered: sub-libs-GuidoQt-debug_ordered 
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile debug
sub-apps-guido2image-debug_ordered: sub-libs-GraphicsSceneMainWindow-debug_ordered 
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile debug
sub-apps-GuidoEditor-debug_ordered: sub-apps-guido2image-debug_ordered 
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile debug
sub-apps-GuidoSceneComposer-debug_ordered: sub-apps-GuidoEditor-debug_ordered 
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile debug
sub-tools-GuidoQtFontViewer-debug_ordered: sub-apps-GuidoSceneComposer-debug_ordered 
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile debug
debug: sub-libs-GuidoQt-debug_ordered sub-libs-GraphicsSceneMainWindow-debug_ordered sub-apps-guido2image-debug_ordered sub-apps-GuidoEditor-debug_ordered sub-apps-GuidoSceneComposer-debug_ordered sub-tools-GuidoQtFontViewer-debug_ordered

sub-libs-GuidoQt-release_ordered:
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile release
sub-libs-GraphicsSceneMainWindow-release_ordered: sub-libs-GuidoQt-release_ordered 
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile release
sub-apps-guido2image-release_ordered: sub-libs-GraphicsSceneMainWindow-release_ordered 
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile release
sub-apps-GuidoEditor-release_ordered: sub-apps-guido2image-release_ordered 
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile release
sub-apps-GuidoSceneComposer-release_ordered: sub-apps-GuidoEditor-release_ordered 
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile release
sub-tools-GuidoQtFontViewer-release_ordered: sub-apps-GuidoSceneComposer-release_ordered 
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile release
release: sub-libs-GuidoQt-release_ordered sub-libs-GraphicsSceneMainWindow-release_ordered sub-apps-guido2image-release_ordered sub-apps-GuidoEditor-release_ordered sub-apps-GuidoSceneComposer-release_ordered sub-tools-GuidoQtFontViewer-release_ordered

sub-libs-GuidoQt-check_ordered:
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile check
sub-libs-GraphicsSceneMainWindow-check_ordered: sub-libs-GuidoQt-check_ordered 
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile check
sub-apps-guido2image-check_ordered: sub-libs-GraphicsSceneMainWindow-check_ordered 
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile check
sub-apps-GuidoEditor-check_ordered: sub-apps-guido2image-check_ordered 
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile check
sub-apps-GuidoSceneComposer-check_ordered: sub-apps-GuidoEditor-check_ordered 
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile check
sub-tools-GuidoQtFontViewer-check_ordered: sub-apps-GuidoSceneComposer-check_ordered 
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile check
check: sub-libs-GuidoQt-check_ordered sub-libs-GraphicsSceneMainWindow-check_ordered sub-apps-guido2image-check_ordered sub-apps-GuidoEditor-check_ordered sub-apps-GuidoSceneComposer-check_ordered sub-tools-GuidoQtFontViewer-check_ordered

sub-libs-GuidoQt-benchmark_ordered:
	@if not exist libs\GuidoQt\ mkdir libs\GuidoQt\ & if not exist libs\GuidoQt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GuidoQt\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GuidoQt\GuidoQt.pro ) && $(MAKE) -f Makefile benchmark
sub-libs-GraphicsSceneMainWindow-benchmark_ordered: sub-libs-GuidoQt-benchmark_ordered 
	@if not exist libs\GraphicsSceneMainWindow\ mkdir libs\GraphicsSceneMainWindow\ & if not exist libs\GraphicsSceneMainWindow\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd libs\GraphicsSceneMainWindow\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\libs\GraphicsSceneMainWindow\GraphicsSceneMainWindow.pro ) && $(MAKE) -f Makefile benchmark
sub-apps-guido2image-benchmark_ordered: sub-libs-GraphicsSceneMainWindow-benchmark_ordered 
	@if not exist apps\guido2image\ mkdir apps\guido2image\ & if not exist apps\guido2image\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\guido2image\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\guido2image\guido2image.pro ) && $(MAKE) -f Makefile benchmark
sub-apps-GuidoEditor-benchmark_ordered: sub-apps-guido2image-benchmark_ordered 
	@if not exist apps\GuidoEditor\ mkdir apps\GuidoEditor\ & if not exist apps\GuidoEditor\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoEditor\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoEditor\GuidoEditor.pro ) && $(MAKE) -f Makefile benchmark
sub-apps-GuidoSceneComposer-benchmark_ordered: sub-apps-GuidoEditor-benchmark_ordered 
	@if not exist apps\GuidoSceneComposer\ mkdir apps\GuidoSceneComposer\ & if not exist apps\GuidoSceneComposer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd apps\GuidoSceneComposer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\apps\GuidoSceneComposer\GuidoSceneComposer.pro ) && $(MAKE) -f Makefile benchmark
sub-tools-GuidoQtFontViewer-benchmark_ordered: sub-apps-GuidoSceneComposer-benchmark_ordered 
	@if not exist tools\GuidoQtFontViewer\ mkdir tools\GuidoQtFontViewer\ & if not exist tools\GuidoQtFontViewer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd tools\GuidoQtFontViewer\ && ( if not exist Makefile $(QMAKE) -o Makefile C:\Users\Fober\src\guidolib\environments\Qt\tools\GuidoQtFontViewer\GuidoQtFontViewer.pro ) && $(MAKE) -f Makefile benchmark
benchmark: sub-libs-GuidoQt-benchmark_ordered sub-libs-GraphicsSceneMainWindow-benchmark_ordered sub-apps-guido2image-benchmark_ordered sub-apps-GuidoEditor-benchmark_ordered sub-apps-GuidoSceneComposer-benchmark_ordered sub-tools-GuidoQtFontViewer-benchmark_ordered
install:install_subtargets  FORCE

uninstall: uninstall_subtargets FORCE

FORCE:

